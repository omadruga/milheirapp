// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cpf {
  id       Int       @id @default(autoincrement())
  name     String
  cpf      String    @unique
  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                     Int       @id @default(autoincrement())
  company                Company   @relation(fields: [companyId], references: [id])
  companyId              Int
  cpf                    Cpf       @relation(fields: [cpfId], references: [id])
  cpfId                  Int
  miles                  Float? 
  averageMilePrice       Float? 
  neareastExpirationDate DateTime?
  seats                  Int?
  seatsUsed              Int?   
  transactions    Transaction[] @relation("account")
  transactionsTo  Transaction[] @relation("accountTo")
  @@unique([companyId, cpfId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  icon    String?
  type    AccountType
  Account Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id      Int         @id @default(autoincrement())
  type TransactionType
  account Account @relation("account", fields: [accountId], references: [id])
  accountId Int  
  accountTo Account? @relation("accountTo", fields: [accountToId], references: [id])
  accountToId Int?  
  date DateTime
  miles Float
  milesTo Float?
  cost Float? 
  expire DateTime?
  description String?
  averagePrice Float?
  cpfs Int?
  milesBuy Float?
  averagePriceTransfer Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AccountType {
  //BANK
  //CREDIT
  PROGRAM
  AIRLINE
  //SALE
}

enum TransactionType {
  BUY
  MEMBERSHIP
  PARTNER
  TRANSFER
  TRANSFER_BUY
  FLIGHT
  EXPIRE
}
